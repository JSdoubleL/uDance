uDance version 1.6.2

AUTHORS:
Metin Balaban
Yueyu Jiang

Prerequisites:
Unix/Linux
Anaconda
raxml-ng (if desired)

Usage:
snakemake -c 4 --configfile config.yaml --snakefile udance.smk all

In the config.yaml, specify `workdir`. Multiple sequence alignments should be located under `workdir`/alignments.
If there is a backbone tree as well, locate it as `workdir`/backbone.nwk and set backbone: "tree" in config.yaml

Changelog:
1.6.2
-Backbone filtering can be turned on or off

1.6.1
-Benchmarks directives are used in udance.smk

1.6.0
-Skip a partition (return backbone) if the number of placements is it less than a desired number
-Bug fixes

1.5.1:
-Output tree may have branch lengths in substitution unit if desired.

1.5.0:
-uDance uses ASTRAL version 5.17.2, which supports both multithreading and constrained search.

1.4.1:
-Performance improvements in placement_prep
-Keep placement_prep intermediate files.

Changelog:
1.4.0:
-Stitching algorithm outputs a new tree named maxqs which picks the best one of the two ASTRAL trees for each partition.

1.3.3:
-Default decompose edge threshold changed
-Bug fixes
-Large cluster pruning strategy is changed to serial search (instead of binary)

1.3.2: 
-Expose backbone selection strategy to the user
-Expose gene tree filtering parameters at refine stage to the user

1.3.1:
-Getting rid of pruning thresholds (automated finding)

1.3.0:
-Pruning Large partitions
-Changes in TreeCluster logic disallowing formation of very small partitions

1.2.1:
-APPLES2 excludes sequences that are placed on internal nodes.
-Filtered backbone sequences are no longer added to the query set.

Tips/Tricks:
-Set min_placements: 9999999 to only filter out low quality backbone sequences and return.
-Set config["mainlines_config"]["n"] to number of species in the dataset and config["backbone"] to "de-novo".
Then run snakemake with target {outdir}/backbone.nwk. This will do species tree inference without divide and conquer.
